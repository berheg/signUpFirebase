{"version":3,"sources":["components/config/Fire.js","components/Home.js","components/Button/Button.component.jsx","components/Input/Input.component.jsx","components/FormTitle/FormTitle.component.jsx","components/FormLine/FormLine.component.jsx","container/Form/Form.component.jsx","components/Loading/Loading.component.jsx","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","facebookProvider","auth","FacebookAuthProvider","googleProvider","GoogleAuthProvider","twitterProvider","TwitterAuthProvider","Home","props","logout","bind","signOut","onClick","this","Component","Button","className","buttons","click","icon","logo","align","title","Input","text","box","inputType","textHolder","inputClass","changeHandler","type","placeholder","onChange","FormTitle","FormLine","FormLogin","faGoogle","onGoogleSignIn","faTwitter","onTwitterSignIn","faFacebookSquare","onFacebookSignIn","handleChange","class","login","Loading","App","e","setState","target","value","isLoading","signInWithEmailAndPassword","state","email","password","then","u","catch","error","console","log","signup","createUserWithEmailAndPassword","googleUser","signInWithPopup","result","user","authListener","onAuthStateChanged","localStorage","setItem","uid","removeItem","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.137de40f.chunk.js","sourcesContent":["import firebase from 'firebase';\r\n//import Rebase from 're-base';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAROMf-XVOoPXN_idZbYigkdn0eABbQbjA\",\r\n  authDomain: \"fp-annotatetheweb-class10.firebaseapp.com\",\r\n  databaseURL: \"https://fp-annotatetheweb-class10.firebaseio.com\",\r\n  projectId: \"fp-annotatetheweb-class10\",\r\n  storageBucket: \"fp-annotatetheweb-class10.appspot.com\",\r\n  messagingSenderId: \"845246565627\",\r\n  appId: \"1:845246565627:web:714afab19ea6670695745e\",\r\n  measurementId: \"G-R64ZFS2G88\"\r\n};\r\nexport const fire = firebase.initializeApp(firebaseConfig);\r\n//const base = Rebase.createClass(app.database());\r\nexport const facebookProvider = new firebase.auth.FacebookAuthProvider();\r\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\r\nexport const twitterProvider = new firebase.auth.TwitterAuthProvider();\r\nexport default fire;","import React, { Component } from 'react';\r\nimport fire from './config/Fire';\r\n\r\nclass Home extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.logout = this.logout.bind(this);\r\n    }\r\n\r\n\r\n    logout() {\r\n        fire.auth().signOut();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Welcome to Home</h1>\r\n                <button onClick={this.logout}>Logout</button>\r\n            </div>                \r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport './Button.css';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\n\r\nconst Button = ( props )  => {   \r\n     \r\n    return(\r\n            \r\n             <button className={props.buttons} onClick={props.click}>\r\n                <FontAwesomeIcon \r\n                 icon={props.logo} \r\n                 className={props.align} \r\n                 />{props.title}\r\n             </button>\r\n          )\r\n}\r\n\r\nexport default Button;","import React from 'react';\r\nimport './Input.css';\r\n\r\n\r\nconst Input = ( {text, box, title, inputType, textHolder, inputClass, changeHandler} ) => {\r\n         \r\n         return(\r\n                    <label className={text}>\r\n                       <div className={box}>{title}</div>\r\n                        <input \r\n                          type={inputType}\r\n                          placeholder={textHolder}\r\n                          onChange={changeHandler}\r\n                          className={inputClass}/>\r\n                    </label>\r\n          \r\n              )\r\n     }\r\n    \r\n\r\nexport default Input;","import React from 'react';\r\nimport './FormTitle.css';\r\n\r\nconst FormTitle = () => <div className='form-title'>Login to Annotate the web</div>\r\n\r\nexport default FormTitle;","import React from 'react';\r\nimport './FormLine.css';\r\n\r\nconst FormLine = () => <div className='form-line'>Or</div> \r\n    \r\nexport default FormLine;","import React from 'react';\r\nimport './Form.css';\r\nimport Button from '../../components/Button/Button.component';\r\nimport Input from '../../components/Input/Input.component';\r\nimport FormTitle from '../../components/FormTitle/FormTitle.component';\r\nimport FormLine from '../../components/FormLine/FormLine.component';\r\nimport {faGoogle} from '@fortawesome/free-brands-svg-icons';\r\n//import fire from '../../components/config/Fire';\r\n\r\nimport {\r\n  faFacebookSquare,\r\n  faTwitter,\r\n} from '@fortawesome/free-brands-svg-icons';\r\n\r\nconst FormLogin = props => {  \r\n  \r\n    return (\r\n      <div className=\"login-wrapper\">\r\n        <div className=\"login-part\">\r\n          <FormTitle />\r\n\r\n          <div className=\"social-media-button-wrapper\">\r\n            <Button\r\n              title=\"Log In With Google\"\r\n              buttons=\"google-btn\"\r\n              logo={faGoogle}\r\n              align=\"logo-align\"\r\n              click={props.onGoogleSignIn}\r\n            />\r\n            <Button                                                        \r\n              title=\"\"\r\n              buttons=\"twitter-btn\"\r\n              logo={faTwitter}\r\n              click={props.onTwitterSignIn}\r\n            />\r\n            <Button\r\n              title=\"\"\r\n              buttons=\"facebook-btn\"\r\n              logo={faFacebookSquare}\r\n              click={props.onFacebookSignIn}\r\n            />\r\n          </div>\r\n          <FormLine />\r\n          <Input\r\n            title=\"Email Address\"\r\n            text=\"login-input-label\"\r\n            box=\"boxclass\"\r\n            inputType=\"email\"\r\n            //   textHolder=\"enter email here\"\r\n            inputClass=\"email-addres-box\"\r\n            changeHandler={props.handleChange}\r\n          />\r\n          <Input\r\n            title=\"Password\"\r\n            text=\"login-input-label\"\r\n            box=\"boxclass\"\r\n            inputType=\"password\"\r\n            //   textHolder=\"enter password\"\r\n            inputClass=\"password-box\"\r\n            changeHandler={props.handleChange}\r\n          />\r\n          <div class=\"login-button-wrapper\">\r\n            <Button\r\n              title=\"Log In\"\r\n              buttons=\"submit-btn\"\r\n              click={props.login}\r\n              logo=\"\"\r\n            />\r\n          </div>\r\n\r\n        </div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default FormLogin;","import React from \"react\";\r\n\r\nexport default function Loading() {\r\n  return <div>Loading...</div>;\r\n}","import React, { Component } from 'react';\nimport './App.css';\nimport {fire, facebookProvider, googleProvider, twitterProvider} from './components/config/Fire';\nimport Home from './components/Home';\nimport Form from './container/Form/Form.component';\nimport Loading from './components/Loading/Loading.component';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = ({\n      user: null,\n      email: '',\n      password: '',\n      isLoading: false\n    });\n    this.authListener = this.authListener.bind(this);\n  }\n\n  componentDidMount() {\n    this.authListener();\n  }\n\n  authListener() {\n    fire.auth().onAuthStateChanged((user) => {\n      this.setState({isLoading: true});\n      console.log(user);\n      if (user) {\n        this.setState({ user });        \n        localStorage.setItem('user', user.uid);\n      } else {\n        this.setState({ user: null });\n        localStorage.removeItem('user');\n      }\n      this.setState({isLoading: false});\n    });\n  }\n  \n  handleChange =(e) => {\n    this.setState({ [e.target.type]: e.target.value });\n  }\n\n  login = (e) => {\n    this.setState({isLoading: true});\n    fire.auth().signInWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\n      this.setState({isLoading: false});\n    }).catch((error) => {\n        console.log(error);\n      });\n  }\n\n  signup = (e) => {\n    fire.auth().createUserWithEmailAndPassword(this.state.email, this.state.password).then((u)=>{\n    }).then((u)=>{console.log(u)})\n    .catch((error) => {\n        console.log(error);\n      })\n  }\n  onGoogleSignIn = googleUser => {    \n      console.log(\"google authentication\");\n      fire.auth().signInWithPopup(googleProvider)\n   .then((result, error) => {\n    if(error){\n      console.log(error)\n    }\n    else{\n\n    }\n   })\n  };\n onFacebookSignIn = () => {\n   fire.auth().signInWithPopup(facebookProvider)\n   .then((result, error) => {\n    if(error){\n      console.log(error)\n    }\n    else{\n\n    }\n   })\n }\nonTwitterSignIn = () => {\n  fire.auth().signInWithPopup(twitterProvider)\n   .then((result, error) => {\n    if(error){\n      console.log(error)\n    }\n    else{\n\n    }\n   })\n}\n  render() {\n    return (\n     <div>\n       {this.state.isLoading && <Loading />}\n       {this.state.user ?  (<Home/>) : \n       (<Form \n        onGoogleSignIn ={this.onGoogleSignIn}\n        onFacebookSignIn={this.onFacebookSignIn}\n        onTwitterSignIn={this.onTwitterSignIn}\n        login ={this.login}\n        handleChange={this.handleChange}\n       />)}\n       </div>\n  )\n};\n}\n\n export default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}